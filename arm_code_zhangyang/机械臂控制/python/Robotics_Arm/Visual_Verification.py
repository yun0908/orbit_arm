"""
第一组：
[-0.22702185809612274, -0.08820344507694244, 0.7170000076293945]
[0.09936194866895676, -0.15571628510951996, 0.7050000429153442]
[0.08860470354557037, -0.1562700718641281, 0.7000000476837158]
[0.09921655803918839, -0.15380243957042694, 0.7040000557899475]
[0.08873531222343445, -0.15817934274673462, 0.7010000348091125]
[0.09725791960954666, -0.15504924952983856, 0.7020000219345093]
[0.09936194866895676, -0.15571628510951996, 0.7050000429153442]
第三组
[-0.012827027589082718, 0.015541252680122852, 0.6690000295639038]
[-0.016016388311982155, 0.012348532676696777, 0.6690000295639038]
[-0.020801018923521042, 0.01075244601815939, 0.6690000295639038]
第四组
[-0.013126921840012074, -0.17319992184638977, 0.6810000538825989]
[-0.013107645325362682, -0.17294558882713318, 0.6800000071525574]
[-0.011464879848062992, -0.17268997430801392, 0.6790000200271606]
[-0.011466131545603275, -0.17432519793510437, 0.6790000200271606]
[-0.013126921840012074, -0.17319992184638977, 0.6810000538825989]
第五组
[0.014659451320767403, 0.12752211093902588, 0.6860000491142273]
[0.01463808212429285, 0.12733621895313263, 0.6850000619888306]
[0.017991119995713234, 0.13615399599075317, 0.6880000233650208]
[0.01632216013967991, 0.12935732305049896, 0.687000036239624]
[0.01791052520275116, 0.12733688950538635, 0.6850000619888306]
第六组
[-0.050348345190286636, -0.2277502417564392, 0.8410000205039978]
[-0.050400666892528534, -0.22396805882453918, 0.8420000672340393]
[0.28025510907173157, -0.09724168479442596, 0.9620000720024109]
[0.003949082922190428, -0.19813524186611176, 0.8530000448226929]

[-0.0516473650932312, -0.08361067622900009, 0.8260000348091125]
[-0.034337349236011505, -0.09964380413293839, 0.8180000185966492]
[-0.03167187049984932, -0.09939837455749512, 0.8160000443458557]
[-0.034255269914865494, -0.10198800265789032, 0.8160000443458557]
[-0.0290896687656641, -0.09810291975736618, 0.8160000443458557]
[-0.03167100250720978, -0.09810460358858109, 0.8160000443458557]
[-0.02936311438679695, -0.07817165553569794, 0.8240000605583191]
[-0.10976634919643402, -0.09856753051280975, 0.8300000429153442]
[-0.06080581992864609, -0.09278377145528793, 0.8260000348091125]
第七组
[-0.1826186180114746, -0.1953449845314026, 0.843000054359436]
[-0.18374386429786682, -0.19511954486370087, 0.8420000672340393]
[-0.18374386429786682, -0.19511954486370087, 0.8420000672340393]
[-0.18374386429786682, -0.19511954486370087, 0.8420000672340393]
[-0.18374386429786682, -0.19511954486370087, 0.8420000672340393]

[-0.2056715488433838, -0.05411916226148605, 0.8140000104904175]
[-0.2054188847541809, -0.054052677005529404, 0.8130000233650208]
[-0.20516622066497803, -0.053986191749572754, 0.812000036239624]
[-0.2054188847541809, -0.054052677005529404, 0.8130000233650208]
[-0.2056715488433838, -0.05411916226148605, 0.8140000104904175]
第八组
[0.13936427235603333, -0.19422602653503418, 0.812000036239624]
[0.13036112487316132, -0.1980767548084259, 0.812000036239624]
[0.14610494673252106, -0.22690103948116302, 0.8130000233650208]
[0.14837270975112915, -0.23930813372135162, 0.8110000491142273]
[0.14012764394283295, -0.2172955572605133, 0.8160000443458557]

[0.146338552236557, -0.29995325207710266, 0.8510000109672546]
[0.1449168473482132, -0.2822282016277313, 0.8510000109672546]
[0.14632774889469147, -0.2972257435321808, 0.8510000109672546]
[0.14355988800525665, -0.2808607518672943, 0.8510000109672546]
[0.14633315801620483, -0.29858940839767456, 0.8510000109672546]
第九组
[0.20368151366710663, -0.19097192585468292, 0.8610000610351562]
[0.2055383175611496, -0.19416861236095428, 0.8630000352859497]
[0.20022138953208923, -0.14346285164356232, 0.8890000581741333]
[0.20041577517986298, -0.22482125461101532, 0.8700000643730164]
[0.19929249584674835, -0.23201918601989746, 0.8710000514984131]

[0.200896218419075, -0.2935733199119568, 0.9010000228881836]
[0.19146732985973358, -0.35813647508621216, 0.8890000581741333]
------------------------------------------------------------------------------------------------------------------------

第一组：
    theta_end = [-20, 25, -27, -26, 19, 15, 21, -30, 0, 20]
    teach得到末端坐标：[0.708,-0.267,0.087]
    视觉检测获得到重力补偿之前相机坐标系下的末端坐标： [-0.24647341668605804, 0.11243334412574768, 0.7230000495910645]
    视觉检测获得到重力补偿之后相机坐标系下的末端坐标：[-0.22702185809612274, -0.08820344507694244, 0.7170000076293945]
    添加重力补偿前的坐标变换后实际末端坐标：[ 0.70199995 -0.24647342 -0.11243334](对比：[0.708,-0.267,0.087])
    添加重力补偿后的坐标变换后实际末端坐标：[ 0.70799999 -0.22702186  0.08820345](对比：[0.708,-0.267,0.087])
第二组：
    theta_end = [0, 30, -27, -30, 25, 15, 21, -25, 0, 20]
    teach得到末端坐标：[0.74,0.043,0.144]
    视觉检测获得到重力补偿之前相机坐标系下的末端坐标：[0.03696059435606003, 0.08502120524644852, 0.675000011920929]
    视觉检测获得到重力补偿之后相机坐标系下的末端坐标：[0.07363762706518173, -0.13165411353111267, 0.6860000491142273]
    添加重力补偿前的坐标变换前实际末端坐标：[ 0.74999999  0.03696059 -0.08502121]对比([0.74,0.043,0.144])
    添加重力补偿后的坐标变换后实际末端坐标：[0.73899995 0.07363763 0.13165411]对比([0.74,0.043,0.144])
第三组：
    theta_end = [0, 30, -20, -30, 25, 30, 30, -25, -10, 10]
    teach得到末端坐标：[0.706,0.112,0.21]
    视觉检测获得到重力补偿之前相机坐标系下的末端坐标：[0.10862124711275101, -0.17393288016319275, 0.7100000381469727]
    视觉检测获得到重力补偿之后相机坐标系下的末端坐标：[0.1061285138130188, -0.010245993733406067, 0.6850000619888306]
    添加重力补偿前的坐标变换前实际末端坐标：[0.74699997 0.07589426 0.00528198]（对比[0.706,0.112,0.22]）
    添加重力补偿后的坐标变换后实际末端坐标：[0.71999996 0.09936195 0.16]（对比[0.706,0.112,0.22]）
第四组：
    theta_end = [28, 20, -28.2, 20.9, -10.9, -18.2, 17.3, -22.7, -27.3, 14.5]
    teach得到末端坐标：[0.724,-0.007,0.21]
    视觉检测获得到重力补偿之前相机坐标系下的末端坐标：[-0.020801018923521042, 0.01075244601815939, 0.6690000295639038]
    视觉检测获得到重力补偿之后相机坐标系下的末端坐标：[-0.013107645325362682, -0.17294558882713318, 0.6800000071525574]
    添加重力补偿前的坐标变换前实际末端坐标：[ 0.75599997 -0.02080102 -0.01075245](对比[0.724,-0.007,0.21])
    添加重力补偿后的坐标变换后实际末端坐标：[ 0.74499999 -0.01310765  0.17294559](对比[0.724,-0.007,0.21])
第五组
    theta_end = [28, 15, -28.2, 6, -10.9, -17.2, 17.3, -12.7, -27.3, 14.5]
    teach得到末端坐标：[0.762,0.011,0.068]
    视觉检测获得到重力补偿之前相机坐标系下的末端坐标：[0.014659451320767403, 0.12752211093902588, 0.6860000491142273]
    视觉检测获得到重力补偿之后相机坐标系下的末端坐标：[0.004556620493531227, -0.0683741569519043, 0.6470000147819519]
    添加重力补偿前的坐标变换前实际末端坐标：[ 0.73899995  0.01465945 -0.12752211]（对比[0.762,0.011,0.068]）
    添加重力补偿后的坐标变换后实际末端坐标：[0.77799999 0.00455662 0.06837416]（对比[0.762,0.011,0.068]）
第六组
    theta_end = [2.0752, 17.3366, 7.2081, 66.3078, 0.0596, -45.1236, -11.7699, -56.1592, -15.7509, 11.3081]
    teach得到末端坐标：[0.597,-0.002,0.218]
    视觉检测获得到重力补偿之前相机坐标系下的末端坐标：[-0.03167100250720978, -0.09810460358858109, 0.8160000443458557]
    视觉检测获得到重力补偿之后相机坐标系下的末端坐标：[-0.050348345190286636, -0.2277502417564392, 0.8410000205039978]
    添加重力补偿前的坐标变换前实际末端坐标：[ 0.60899996 -0.031671    0.0981046 ]（对比[0.597,-0.002,0.218]）
    添加重力补偿后的坐标变换后实际末端坐标：[0.58399998 -0.05034835  0.22775024]（对比[0.597,-0.002,0.218]）
第七组（RRT轨迹）
    theta_end = [-14.8915, 15.9019, -19.0894, 39.9868, -18.9106, -38.8952, 40.6254, -13.9245, 37.1735, -10.8402](RRT轨迹)
    teach得到末端坐标：[0.614,-0.162,0.25]
    视觉检测获得到重力补偿之前相机坐标系下的末端坐标：[-0.2054188847541809, -0.054052677005529404, 0.8130000233650208]
    视觉检测获得到重力补偿之后相机坐标系下的末端坐标：[-0.18374386429786682, -0.19511954486370087, 0.8420000672340393]
    添加重力补偿前的坐标变换前实际末端坐标：[ 0.61199998 -0.20541888  0.05405268]（对比[0.614,-0.162,0.25]）
    添加重力补偿后的坐标变换后实际末端坐标：[ 0.58299993 -0.18374386  0.20511954]（对比[0.614,-0.162,0.25]）
第八组（RRT轨迹）
    theta_end = [11.2586, 20.1893, 10.3437, 44.1481, 12.6967, -24.9925, 7.0461, -27.0131, -64.6906, -10.8396](RRT轨迹)
    teach得到末端坐标：[0.577,0.166,0.348]
    视觉检测获得到重力补偿之前相机坐标系下的末端坐标：[0.13036112487316132, -0.1980767548084259, 0.812000036239624]
    视觉检测获得到重力补偿之后相机坐标系下的末端坐标：[0.1449168473482132, -0.2822282016277313, 0.8510000109672546]
    添加重力补偿前的坐标变换前实际末端坐标：[0.61299996 0.13036112 0.19807675](对比[0.577,0.166,0.348])
    添加重力补偿后的坐标变换后实际末端坐标：[0.57399999 0.14491685 0.2822282 ]（对比[0.577,0.166,0.348]）
第九组（RRT轨迹）
    theta_end = [-11.2971, 37.6525, 25.0006, 10.5497, 9.7882, 3.5558, 45.3380, -6.0954, -78.8981, -55.8161]（RRT轨迹）
    teach得到末端坐标：[0.532,0.22,0.337]
    视觉检测获得到重力补偿之前相机坐标系下的末端坐标：[0.20041577517986298, -0.22482125461101532, 0.8700000643730164]
    视觉检测获得到重力补偿之后相机坐标系下的末端坐标：[0.19146732985973358, -0.35813647508621216, 0.8890000581741333]
    添加重力补偿前的坐标变换前实际末端坐标：[0.56399994 0.20368151 0.19097193](对比[0.532,0.22,0.337])
    添加重力补偿后的坐标变换后实际末端坐标：[0.53599994 0.19146733 0.35813648]（对比[0.532,0.22,0.337]）
"""

import numpy as np
from spatialmath import *
from spatialmath.base import *


def Coordinate_transformation(camera_x, camera_y=None, camera_z=None):
    if isinstance(camera_x, list):
        Rcamera_xyz = SE3(transl(camera_x[0], camera_x[1], camera_x[2]))
    else:
        Rcamera_xyz = SE3(transl(camera_x, camera_y, camera_z))
    move = (144 - 1.5) * 0.01
    World = transl(0, 0, 0)
    Pm = transl(move, 0, 0)
    Ry = troty(90, 'deg')
    Rx = trotx(180, 'deg')
    Rz = trotz(-90, 'deg')

    Rw2c = np.dot(np.dot(np.dot(np.dot(World, Pm), Ry), Rx), Rz)
    Rw2c_Pos = SE3(np.dot(Rw2c, Rcamera_xyz))
    W_point_xyz = Rw2c_Pos.A[:3, 3]
    return W_point_xyz


if __name__ == '__main__':
    # # 验证1
    # W_coord = Coordinate_transformation(0, 0, 0.615)
    # print(W_coord)
    # # 验证2
    # W_coord = Coordinate_transformation(-0.22702185809612274, -0.08820344507694244, 0.7170000076293945)
    # print(W_coord)
    # # 验证3
    # W_coord = Coordinate_transformation(-0.24647341668605804, 0.11243334412574768, 0.7230000495910645)
    # print(W_coord)
    # # 验证4
    # W_coord = Coordinate_transformation(0.03696059435606003, 0.08502120524644852, 0.675000011920929)
    # print(W_coord)
    # # 验证5
    # W_coord = Coordinate_transformation(0.12608109414577484, -0.15580138564109802, 0.7130000591278076)
    # print(W_coord)
    # # 验证6
    # W_coord = Coordinate_transformation(0.09936194866895676, -0.15571628510951996, 0.7050000429153442)
    # print(W_coord)
    # # 验证7
    # W_coord = Coordinate_transformation(-0.020801018923521042, 0.01075244601815939, 0.6690000295639038)
    # print(W_coord)
    # # 验证8
    # W_coord = Coordinate_transformation(-0.013107645325362682, -0.17294558882713318, 0.6800000071525574)
    # print(W_coord)
    # # 验证9
    # W_coord = Coordinate_transformation(0.004556620493531227, -0.0683741569519043, 0.6470000147819519)
    # print(W_coord)
    # # 验证10
    # W_coord = Coordinate_transformation([0.014659451320767403, 0.12752211093902588, 0.6860000491142273])
    # print(W_coord)
    # # 验证11
    # W_coord = Coordinate_transformation([-0.050348345190286636, -0.2277502417564392, 0.8410000205039978])
    # print(W_coord)
    # 验证12
    # W_coord = Coordinate_transformation([-0.03167100250720978, -0.09810460358858109, 0.8160000443458557])
    # print(W_coord)
    # 验证13
    # W_coord = Coordinate_transformation([-0.18374386429786682, -0.19511954486370087, 0.8420000672340393])
    # print(W_coord)
    # W_coord = Coordinate_transformation([-0.2054188847541809, -0.054052677005529404, 0.8130000233650208])
    # print(W_coord)
    # 验证14
    # W_coord = Coordinate_transformation([0.13036112487316132, -0.1980767548084259, 0.812000036239624])
    # print(W_coord)
    # W_coord = Coordinate_transformation([0.1449168473482132, -0.2822282016277313, 0.8510000109672546])
    # print(W_coord)
    # 验证15
    # W_coord = Coordinate_transformation([0.20041577517986298, -0.22482125461101532, 0.8700000643730164])
    # print(W_coord)
    # W_coord = Coordinate_transformation([0.20368151366710663, -0.19097192585468292, 0.8610000610351562])
    # print(W_coord)
    # W_coord = Coordinate_transformation([0.20022138953208923, -0.14346285164356232, 0.8890000581741333])
    # print(W_coord)
    # W_coord = Coordinate_transformation([0.200896218419075, -0.2935733199119568, 0.9010000228881836])
    # print(W_coord)
    # W_coord = Coordinate_transformation([0.19146732985973358, -0.35813647508621216, 0.8890000581741333])
    # print(W_coord)
    pass
